The system is: Windows - 10.0.22621 - AMD64
Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
Compiler:  
Build flags: 
Id flags:  

The output was:
0
MSBuild version 17.4.0+18d5aef85 for .NET Framework
生成启动时间为 2023/6/5 13:53:28。
节点 1 上的项目“E:\cs100\2023\hw8\build\CMakeFiles\3.25.1\CompilerIdC\CompilerIdC.vcxproj”(默认目标)。
PrepareForBuild:
  正在创建目录“Debug\”。
  正在创建目录“Debug\CompilerIdC.tlog\”。
InitializeBuildStatus:
  正在创建“Debug\CompilerIdC.tlog\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\bin\HostX64\x64\CL.exe /c /nologo /W0 /WX- /diagnostics:column /Od /D _MBCS /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"Debug\\" /Fd"Debug\vc143.pdb" /external:W0 /Gd /TC /FC /errorReport:queue CMakeCCompilerId.c
  CMakeCCompilerId.c
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\bin\HostX64\x64\link.exe /ERRORREPORT:QUEUE /OUT:".\CompilerIdC.exe" /INCREMENTAL:NO /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:".\CompilerIdC.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:".\CompilerIdC.lib" /MACHINE:X64 Debug\CMakeCCompilerId.obj
  CompilerIdC.vcxproj -> E:\cs100\2023\hw8\build\CMakeFiles\3.25.1\CompilerIdC\CompilerIdC.exe
PostBuildEvent:
  for %%i in (cl.exe) do @echo CMAKE_C_COMPILER=%%~$PATH:i
  :VCEnd
  CMAKE_C_COMPILER=C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\bin\Hostx64\x64\cl.exe
FinalizeBuildStatus:
  正在删除文件“Debug\CompilerIdC.tlog\unsuccessfulbuild”。
  正在对“Debug\CompilerIdC.tlog\CompilerIdC.lastbuildstate”执行 Touch 任务。
已完成生成项目“E:\cs100\2023\hw8\build\CMakeFiles\3.25.1\CompilerIdC\CompilerIdC.vcxproj”(默认目标)的操作。

已成功生成。
    0 个警告
    0 个错误

已用时间 00:00:00.64


Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CompilerIdC.exe"

Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CompilerIdC.vcxproj"

The C compiler identification is MSVC, found in "E:/cs100/2023/hw8/build/CMakeFiles/3.25.1/CompilerIdC/CompilerIdC.exe"

Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler:  
Build flags: 
Id flags:  

The output was:
0
MSBuild version 17.4.0+18d5aef85 for .NET Framework
生成启动时间为 2023/6/5 13:53:29。
节点 1 上的项目“E:\cs100\2023\hw8\build\CMakeFiles\3.25.1\CompilerIdCXX\CompilerIdCXX.vcxproj”(默认目标)。
PrepareForBuild:
  正在创建目录“Debug\”。
  正在创建目录“Debug\CompilerIdCXX.tlog\”。
InitializeBuildStatus:
  正在创建“Debug\CompilerIdCXX.tlog\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\bin\HostX64\x64\CL.exe /c /nologo /W0 /WX- /diagnostics:column /Od /D _MBCS /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"Debug\\" /Fd"Debug\vc143.pdb" /external:W0 /Gd /TP /FC /errorReport:queue CMakeCXXCompilerId.cpp
  CMakeCXXCompilerId.cpp
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\bin\HostX64\x64\link.exe /ERRORREPORT:QUEUE /OUT:".\CompilerIdCXX.exe" /INCREMENTAL:NO /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:".\CompilerIdCXX.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:".\CompilerIdCXX.lib" /MACHINE:X64 Debug\CMakeCXXCompilerId.obj
  CompilerIdCXX.vcxproj -> E:\cs100\2023\hw8\build\CMakeFiles\3.25.1\CompilerIdCXX\CompilerIdCXX.exe
PostBuildEvent:
  for %%i in (cl.exe) do @echo CMAKE_CXX_COMPILER=%%~$PATH:i
  :VCEnd
  CMAKE_CXX_COMPILER=C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\bin\Hostx64\x64\cl.exe
FinalizeBuildStatus:
  正在删除文件“Debug\CompilerIdCXX.tlog\unsuccessfulbuild”。
  正在对“Debug\CompilerIdCXX.tlog\CompilerIdCXX.lastbuildstate”执行 Touch 任务。
已完成生成项目“E:\cs100\2023\hw8\build\CMakeFiles\3.25.1\CompilerIdCXX\CompilerIdCXX.vcxproj”(默认目标)的操作。

已成功生成。
    0 个警告
    0 个错误

已用时间 00:00:00.40


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CompilerIdCXX.exe"

Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CompilerIdCXX.vcxproj"

The CXX compiler identification is MSVC, found in "E:/cs100/2023/hw8/build/CMakeFiles/3.25.1/CompilerIdCXX/CompilerIdCXX.exe"

Detecting C compiler ABI info compiled with the following output:
Change Dir: E:/cs100/2023/hw8/build/CMakeFiles/CMakeScratch/TryCompile-gfifnk

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe cmTC_cc7d5.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:m && MSBuild version 17.4.0+18d5aef85 for .NET Framework
  用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.34.31935 版
  CMakeCCompilerABI.c
  版权所有(C) Microsoft Corporation。保留所有权利。
  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_cc7d5.dir\Debug\\" /Fd"cmTC_cc7d5.dir\Debug\vc143.pdb" /external:W1 /Gd /TC /errorReport:queue "C:\Program Files\CMake\share\cmake-3.25\Modules\CMakeCCompilerABI.c"
  cmTC_cc7d5.vcxproj -> E:\cs100\2023\hw8\build\CMakeFiles\CMakeScratch\TryCompile-gfifnk\Debug\cmTC_cc7d5.exe



Detecting CXX compiler ABI info compiled with the following output:
Change Dir: E:/cs100/2023/hw8/build/CMakeFiles/CMakeScratch/TryCompile-asdwpv

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe cmTC_d6142.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:m && MSBuild version 17.4.0+18d5aef85 for .NET Framework
  用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.34.31935 版
  CMakeCXXCompilerABI.cpp
  版权所有(C) Microsoft Corporation。保留所有权利。
  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /Fo"cmTC_d6142.dir\Debug\\" /Fd"cmTC_d6142.dir\Debug\vc143.pdb" /external:W1 /Gd /TP /errorReport:queue "C:\Program Files\CMake\share\cmake-3.25\Modules\CMakeCXXCompilerABI.cpp"
  cmTC_d6142.vcxproj -> E:\cs100\2023\hw8\build\CMakeFiles\CMakeScratch\TryCompile-asdwpv\Debug\cmTC_d6142.exe



Determining if files sys/types.h exist passed with the following output:
Change Dir: E:/cs100/2023/hw8/build/CMakeFiles/CMakeScratch/TryCompile-xmoxcr

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe cmTC_4574e.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:m && MSBuild version 17.4.0+18d5aef85 for .NET Framework
  用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.34.31935 版
  HAVE_SYS_TYPES_H.c
  版权所有(C) Microsoft Corporation。保留所有权利。
  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_4574e.dir\Debug\\" /Fd"cmTC_4574e.dir\Debug\vc143.pdb" /external:W1 /Gd /TC /errorReport:queue "E:\cs100\2023\hw8\build\CMakeFiles\CMakeScratch\TryCompile-xmoxcr\HAVE_SYS_TYPES_H.c"
  cmTC_4574e.vcxproj -> E:\cs100\2023\hw8\build\CMakeFiles\CMakeScratch\TryCompile-xmoxcr\Debug\cmTC_4574e.exe



Determining if files stdbool.h exist passed with the following output:
Change Dir: E:/cs100/2023/hw8/build/CMakeFiles/CMakeScratch/TryCompile-3sml7l

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe cmTC_10ea9.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:m && MSBuild version 17.4.0+18d5aef85 for .NET Framework
  用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.34.31935 版
  HAVE_STDBOOL_H.c
  版权所有(C) Microsoft Corporation。保留所有权利。
  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_10ea9.dir\Debug\\" /Fd"cmTC_10ea9.dir\Debug\vc143.pdb" /external:W1 /Gd /TC /errorReport:queue "E:\cs100\2023\hw8\build\CMakeFiles\CMakeScratch\TryCompile-3sml7l\HAVE_STDBOOL_H.c"
  cmTC_10ea9.vcxproj -> E:\cs100\2023\hw8\build\CMakeFiles\CMakeScratch\TryCompile-3sml7l\Debug\cmTC_10ea9.exe



Determining if files fcntl.h exist passed with the following output:
Change Dir: E:/cs100/2023/hw8/build/CMakeFiles/CMakeScratch/TryCompile-kf44kz

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe cmTC_8c071.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:m && MSBuild version 17.4.0+18d5aef85 for .NET Framework
  用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.34.31935 版
  HAVE_FCNTL_H.c
  版权所有(C) Microsoft Corporation。保留所有权利。
  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_8c071.dir\Debug\\" /Fd"cmTC_8c071.dir\Debug\vc143.pdb" /external:W1 /Gd /TC /errorReport:queue "E:\cs100\2023\hw8\build\CMakeFiles\CMakeScratch\TryCompile-kf44kz\HAVE_FCNTL_H.c"
  cmTC_8c071.vcxproj -> E:\cs100\2023\hw8\build\CMakeFiles\CMakeScratch\TryCompile-kf44kz\Debug\cmTC_8c071.exe



Determining if files stdint.h exist passed with the following output:
Change Dir: E:/cs100/2023/hw8/build/CMakeFiles/CMakeScratch/TryCompile-v18d79

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe cmTC_fc5ae.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:m && MSBuild version 17.4.0+18d5aef85 for .NET Framework
  用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.34.31935 版
  HAVE_STDINT_H.c
  版权所有(C) Microsoft Corporation。保留所有权利。
  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_fc5ae.dir\Debug\\" /Fd"cmTC_fc5ae.dir\Debug\vc143.pdb" /external:W1 /Gd /TC /errorReport:queue "E:\cs100\2023\hw8\build\CMakeFiles\CMakeScratch\TryCompile-v18d79\HAVE_STDINT_H.c"
  cmTC_fc5ae.vcxproj -> E:\cs100\2023\hw8\build\CMakeFiles\CMakeScratch\TryCompile-v18d79\Debug\cmTC_fc5ae.exe



Determining if files inttypes.h exist passed with the following output:
Change Dir: E:/cs100/2023/hw8/build/CMakeFiles/CMakeScratch/TryCompile-xlvetg

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe cmTC_35ea5.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:m && MSBuild version 17.4.0+18d5aef85 for .NET Framework
  用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.34.31935 版
  HAVE_INTTYPES_H.c
  版权所有(C) Microsoft Corporation。保留所有权利。
  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_35ea5.dir\Debug\\" /Fd"cmTC_35ea5.dir\Debug\vc143.pdb" /external:W1 /Gd /TC /errorReport:queue "E:\cs100\2023\hw8\build\CMakeFiles\CMakeScratch\TryCompile-xlvetg\HAVE_INTTYPES_H.c"
  cmTC_35ea5.vcxproj -> E:\cs100\2023\hw8\build\CMakeFiles\CMakeScratch\TryCompile-xlvetg\Debug\cmTC_35ea5.exe



